{
  "version": 2,
  "rules": {
    "designPhase": {
      "mockDataStrategy": {
        "layer": "service-mock", 
        "persistence": "memory", 
        "migrationPlan": {
          "sqliteSchemaPreview": true,
          "fieldTypeAlignment": "strict"
        }
      },
      "componentSafety": {
        "allowNodeApis": false, 
        "ipcSimulation": "mock-return-values",
        "electronReady": false 
      }
    },
    "vueUiRules": {
      "mockPatterns": {
        "dataSources": [
          {
            "type": "local-mock",
            "pattern": "/src/mocks/*.mock.ts",
            "enforceSchema": true
          },
          {
            "type": "fake-api",
            "baseUrl": "/mock-service/",
            "delay": "150-400ms"
          }
        ],
        "validation": {
          "required": ["id", "createdAt"],
          "relationships": "embedded" 
        }
      },
      "componentPrototyping": {
        "stateManagement": "pinia-mock",
        "eventContracts": {
          "file": "/src/contracts/events.d.ts",
          "strict": true
        },
        "layoutBoundaries": {
          "maxMockComponents": 3,
          "isolateElectronApis": true
        }
      }
    },
    "electronMockRules": {
      "ipcSimulation": {
        "validation": {
          "schema": "json-schema",
          "location": "/src/mocks/ipc.schema.json"
        },
        "latency": {
          "min": 50,
          "max": 800,
          "errorRate": 0.1
        }
      },
      "securityPreview": {
        "mockFsAccess": "virtual-fs",
        "mockDbOperations": "in-memory-store"
      }
    },
    "sqliteSchemaAlignment": {
      "mockFieldTypes": {
        "TEXT": "string",
        "INTEGER": "number",
        "BLOB": "Uint8Array",
        "REAL": "number"
      },
      "relationshipMapping": {
        "foreignKeys": "nestedObjects",
        "joins": "objectExpansion"
      },
      "migrationPreview": {
        "generateMockMigrations": true,
        "location": "/src/mocks/migrations/"
      }
    },
    "validationPrompts": {
      "onComponentCreate": [
        "Does this component work with both mock and real data?",
        "Have I avoided Electron-specific APIs in presentation layer?",
        "Do props align with future SQLite schema?",
        "Are mock relationships structured like future JOINs?"
      ],
      "onMockDataUpdate": [
        "Does this match the draft SQL schema?",
        "Have I included all non-null constraints?",
        "Are unique indexes represented in mock data?",
        "Does this work with virtualized lists (Electron memory limits)?"
      ]
    },
    "testing": {
      "mockSpecific": {
        "dataReset": "beforeEachTest",
        "performanceBaselines": {
          "renderTime": "200ms",
          "memoryUsage": "50MB"
        }
      }
    }
  }
}




